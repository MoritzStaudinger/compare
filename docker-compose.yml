version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - .env
    command: python /app/app.py
    working_dir: /app
    volumes:
      - ./backend:/app/backend
      - ./app.py:/app/app.py
      - ./data/cache:/app/data/cache
      - ./data/temp:/app/data/temp
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/html:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/html:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --non-interactive --webroot
      --webroot-path=/var/www/certbot
      --email moritz.staudinger@tuwien.ac.at
      --agree-tos
      --no-eff-email
      -d compare.ds-ifs.tuwien.ac.at"

  certbot-renew:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/html:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do
      certbot renew --webroot --webroot-path=/var/www/certbot &&
      nginx -s reload;
      sleep 12h & wait $${!};
      done"


volumes:
  certbot-etc:
  certbot-var:
